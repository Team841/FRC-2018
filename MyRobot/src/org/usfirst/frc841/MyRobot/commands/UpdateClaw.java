// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc841.MyRobot.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc841.MyRobot.Robot;
import org.usfirst.frc841.MyRobot.subsystems.C;

/**
 *
 */
public class UpdateClaw extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public UpdateClaw() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.claw);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	Robot.claw.zeroElbow();
    	
    	if(Robot.claw.isAutoGrab()) {
    		if(Robot.claw.lastgrabsensor & !Robot.claw.isGrab()) {
    			Robot.claw.closeClaw();
    		}
    		if(Robot.claw.lastcubesensor & !Robot.claw.isCubeGot()) {
    			Robot.claw.closeClaw();
    			setTimeout (0.7);
    			Robot.driveTrain.enablepickup=true;
       		}
    		if( Robot.driveTrain.enablepickup && !isTimedOut() ) {
				
			
			Robot.claw.stopSuck();
			Robot.claw.setDeathGrip(true);
			Robot.claw.ploop.setTunings(C.c_p, C.c_i, C.c_d);
			Robot.claw.ploop.updateSetpoint(C.claw_up);//Set claw elbow to retract
			Robot.claw.disableGrab();
			Robot.driveTrain.enablepickup=false;
    		}
    			
    	}
    	Robot.claw.lastcubesensor = Robot.claw.isCubeGot();
    	Robot.claw.lastgrabsensor = Robot.claw.isGrab();
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return true;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
