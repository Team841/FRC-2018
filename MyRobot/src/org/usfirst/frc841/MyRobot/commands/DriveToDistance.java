// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc841.MyRobot.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc841.MyRobot.Robot;
import org.usfirst.frc841.MyRobot.subsystems.C;

/**
 *
 */
public class DriveToDistance extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private double m_Speed;
    private double m_Distance;
    private boolean m_DriveFWD;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public DriveToDistance(double Speed, double Distance, boolean DriveFWD) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_Speed = Speed;
        m_Distance = Distance;
        m_DriveFWD = DriveFWD;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    	Robot.driveTrain.initEncoder();
    	
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	
    	double left,right,errorsum;
    	left=Robot.driveTrain.getLeftEncoderDistance();
    	right=Robot.driveTrain.getRightEncoderDistance();
    	errorsum= (left-right)* C.d_kp;
    	
    	if(errorsum > 0.1) {
    		errorsum = 0.1;
    	
    				
    	}
    	else if (errorsum < -0.1) {
    		errorsum = -0.1;
    	}
    	if(this.m_DriveFWD) {
    		Robot.driveTrain.SetLeftRight(this.m_Speed, -this.m_Speed - errorsum);
    	}
    	else {
    		Robot.driveTrain.SetLeftRight(-this.m_Speed, this.m_Speed - errorsum);
    	}
    }
    

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return Math.abs(Robot.driveTrain.getLeftEncoderDistance()) > this.m_Distance;
        
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Robot.driveTrain.SetLeftRight(0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
